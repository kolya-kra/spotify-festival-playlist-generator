[{"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\index.js":"1","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\App\\App.js":"2","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\lib\\authorization.js":"3","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\RoundButton.jsx":"4","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\Artists.jsx":"5","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\ArtistSearch.jsx":"6","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\SearchBar.jsx":"7","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\SelectionList.jsx":"8","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\lib\\helper.js":"9","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\Start.jsx":"10","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\Tracks.jsx":"11","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\PlaylistSettings.jsx":"12","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\lib\\imageRecognition.js":"13","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\ImageUpload.jsx":"14"},{"size":510,"mtime":1608666507536,"results":"15","hashOfConfig":"16"},{"size":1299,"mtime":1608762265661,"results":"17","hashOfConfig":"16"},{"size":1593,"mtime":1608759352356,"results":"18","hashOfConfig":"16"},{"size":699,"mtime":1608809078438,"results":"19","hashOfConfig":"16"},{"size":2461,"mtime":1608759521470,"results":"20","hashOfConfig":"16"},{"size":2192,"mtime":1608808585670,"results":"21","hashOfConfig":"16"},{"size":977,"mtime":1608762353579,"results":"22","hashOfConfig":"16"},{"size":2013,"mtime":1608741750215,"results":"23","hashOfConfig":"16"},{"size":303,"mtime":1608723922255,"results":"24","hashOfConfig":"16"},{"size":1190,"mtime":1608745496558,"results":"25","hashOfConfig":"16"},{"size":4297,"mtime":1608762040983,"results":"26","hashOfConfig":"16"},{"size":661,"mtime":1608761697894,"results":"27","hashOfConfig":"16"},{"size":35447,"mtime":1608807594504,"results":"28","hashOfConfig":"16"},{"size":1022,"mtime":1608810978082,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1q59f6y",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\index.js",[],["61","62"],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\App\\App.js",[],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\lib\\authorization.js",[],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\RoundButton.jsx",[],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\Artists.jsx",["63"],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\ArtistSearch.jsx",["64","65","66"],"import React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ImageUpload from '../components/ImageUpload';\nimport PlaylistSettings from '../components/PlaylistSettings';\nimport { FloatingButton as Button } from '../components/RoundButton';\nimport { withRouter } from 'react-router-dom';\nimport { getAuthToken } from '../lib/authorization';\nimport { ocrResult, formatOcrResult } from '../lib/imageRecognition';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    borderColor: '#ffffff',\n  },\n  input: {\n    color: '#ffffff',\n    borderColor: '#ffffff',\n  },\n}));\n\nconst ArtistSearch = (props) => {\n  const classes = useStyles();\n\n  const [artistsInput, setArtistsInput] = useState('');\n  const [tracksPerArtist, setTracksPerArtist] = useState(3);\n\n  useEffect(() => {\n    console.log(formatOcrResult(ocrResult));\n    getAuthToken(process.env.REACT_APP_SPOTIFY_CLIENT_ID);\n  }, []);\n\n  const handleButtonClick = () => {\n    localStorage.setItem('tracksPerArtist', tracksPerArtist);\n    redirectToArtists();\n  };\n\n  const redirectToArtists = () => {\n    let searchParams = new URLSearchParams();\n    searchParams.append('artists', artistsInput);\n    props.history.push({\n      pathname: '/artists',\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <div>\n      <h1>Artist Search</h1>\n      <ImageUpload />\n      <TextField\n        className={classes.textField}\n        InputProps={{\n          className: classes.input,\n        }}\n        color=\"secondary\"\n        value={artistsInput}\n        label=\"Artists\"\n        multiline\n        rows={4}\n        onChange={(e) => setArtistsInput(e.target.value)}\n      />\n      <PlaylistSettings\n        tracksPerArtist={tracksPerArtist}\n        setTracksPerArtist={setTracksPerArtist}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleButtonClick}>\n        Add Artists\n      </Button>\n    </div>\n  );\n};\n\nexport default withRouter(ArtistSearch);\n","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\SearchBar.jsx",[],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\SelectionList.jsx",[],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\lib\\helper.js",[],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\Start.jsx",[],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\views\\Tracks.jsx",["67"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport SearchBar from '../components/SearchBar';\nimport SelectionList from '../components/SelectionList';\nimport { paramsToArray } from '../lib/helper';\nimport { FloatingButton } from '../components/RoundButton';\nimport { getTokenHeader } from '../lib/authorization';\n\nconst Tracks = () => {\n  const [tracks, setTracks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const paramArtists = paramsToArray('artists');\n    let artist;\n    for (artist of paramArtists) {\n      getTopTracks(artist);\n    }\n  }, []);\n\n  const getTopTracks = (artistId) => {\n    if (artistId !== '') {\n      axios\n        .get(`\thttps://api.spotify.com/v1/artists/${artistId}/top-tracks`, {\n          params: {\n            market: 'DE',\n          },\n          ...getTokenHeader(),\n        })\n        .then(async (res) => {\n          const tracksPerArtist = await localStorage.getItem('tracksPerArtist');\n          const resTracks = formatTracks(\n            res.data.tracks.slice(0, tracksPerArtist)\n          );\n          console.log(resTracks);\n          resTracks.forEach((newTrack) => {\n            if (!tracks.map((track) => track.id).includes(newTrack.id)) {\n              setTracks((prev) => {\n                return [...prev, newTrack];\n              });\n            }\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const addTrack = (trackName) => {\n    if (trackName !== '') {\n      axios\n        .get('https://api.spotify.com/v1/search', {\n          params: {\n            q: trackName,\n            type: 'track',\n            offset: 0,\n            limit: 1,\n          },\n          ...getTokenHeader(),\n        })\n        .then((res) => {\n          const searchedTrack = formatTracks(res.data?.tracks?.items);\n          if (\n            searchedTrack.length > 0 &&\n            !tracks.map((track) => track.id).includes(searchedTrack[0].id)\n          ) {\n            setTracks((prev) => {\n              return [searchedTrack[0], ...prev];\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const addTracksToPlaylist = async () => {\n    const playlistId = await createPlaylist();\n    axios\n      .post(\n        `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n        {\n          uris: tracks.map((track) => track.uri),\n        },\n        {\n          ...getTokenHeader(),\n        }\n      )\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const createPlaylist = async () => {\n    const user = await getSpotifyUser();\n    return axios\n      .post(\n        `\thttps://api.spotify.com/v1/users/${user.id}/playlists`,\n        {\n          name: 'Test',\n          public: false,\n        },\n        {\n          ...getTokenHeader(),\n        }\n      )\n      .then((res) => {\n        return res.data.id;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const getSpotifyUser = () => {\n    return axios\n      .get('https://api.spotify.com/v1/me', {\n        ...getTokenHeader(),\n      })\n      .then((res) => res.data)\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const formatTracks = (unformatedTracks) => {\n    return unformatedTracks.map((track) => ({\n      artists: track.artists.map((artist) => ({\n        id: artist.id,\n        name: artist.name,\n      })),\n      id: track.id,\n      name: track.name,\n      uri: track.uri,\n      images: track?.album?.images,\n    }));\n  };\n  return (\n    <div>\n      <h1>Tracks</h1>\n      <SearchBar\n        placeholder={'Add more Tracks'}\n        value={searchTerm}\n        handleInput={(e) => setSearchTerm(e.target.value)}\n        handleSubmit={(e) => {\n          if (e.key === 'Enter') {\n            addTrack(searchTerm);\n            setSearchTerm('');\n            e.preventDefault();\n          }\n        }}\n      />\n      <SelectionList entries={tracks} tracks />\n      <FloatingButton\n        color=\"primary\"\n        variant=\"extended\"\n        onClick={addTracksToPlaylist}\n      >\n        Create Playlist\n      </FloatingButton>\n    </div>\n  );\n};\n\nexport default Tracks;\n","C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\PlaylistSettings.jsx",[],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\lib\\imageRecognition.js",["68"],"C:\\SAPDevelop\\spotify-festival-playlist-generator\\src\\components\\ImageUpload.jsx",["69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":21,"column":6,"nodeType":"78","endLine":21,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":17},{"ruleId":"80","severity":1,"message":"85","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":18},{"ruleId":"76","severity":1,"message":"86","line":20,"column":6,"nodeType":"78","endLine":20,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":16,"nodeType":"90","messageId":"91","endLine":3,"endColumn":22},{"ruleId":"80","severity":1,"message":"92","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":12},{"ruleId":"80","severity":1,"message":"93","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":34,"column":7,"nodeType":"96","endLine":34,"endColumn":52},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchArtist'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getTopTracks'. Either include it or remove the dependency array.",["100"],"no-control-regex","Unexpected control character(s) in regular expression: \\x0d, \\x0a.","Literal","unexpected","'Card' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [searchArtist]",{"range":"105","text":"106"},"Update the dependencies array to be: [getTopTracks]",{"range":"107","text":"108"},[691,693],"[searchArtist]",[630,632],"[getTopTracks]"]